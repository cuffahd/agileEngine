package com.agile.engine.cuffaro.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
/**
 * Account balance Entity
 * @author hcuff
 *
 */
@Entity
public class AccountBalance implements Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = -7013442732635173622L;

	/**
	 * Account ID. Now if hardcoded to 1 because we only manage one user.
	 * 
	 */
	@Id
	@Column(nullable = false)
	private Long accountId = 1L; 
	//TODO: If we will manage more accounts, remove this hardcoded value.
	
	@Column(nullable = false, precision = 10, scale = 8)
	private BigDecimal amount;
	
	/**
	 * Effective date-time, generated by the service, when the transaction is being stored. 
	 */
	@Temporal(value = TemporalType.TIMESTAMP)
	@Column(nullable = false)
	private Date effectiveDate;

	@Version
    private Long version;
	
	public AccountBalance() {}
	public AccountBalance(Long accountId, BigDecimal amount) {
		this.accountId = accountId;
		this.amount = amount;
	}
	
	public Long getAccountId() {
		return accountId;
	}

	public void setAccountId(Long accountId) {
		this.accountId = accountId;
	}

	public BigDecimal getAmount() {
		return amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	public Date getEffectiveDate() {
		return effectiveDate;
	}

	public void setEffectiveDate(Date effectiveDate) {
		this.effectiveDate = effectiveDate;
	}

	public void reduceAmount(BigDecimal otherAmount) {
		this.amount = this.amount.subtract(otherAmount);
		
	}
	
	public void increaseAmount(BigDecimal otherAmount) {
		this.amount = this.amount.add(otherAmount);
		
	}
	public Long getVersion() {
		return version;
	}
	public void setVersion(Long version) {
		this.version = version;
	}
	
}
